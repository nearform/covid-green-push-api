name: Deploy PUSH to PROD

on:
  push:
    branches:
      - prod

jobs:
  deploy-cti:
    name: Deploy to CTI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CTI_PROD_KEY }}
        aws-secret-access-key: ${{ secrets.CTI_PROD_SECRET }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push PUSH image to Amazon ECR
      id: build-push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cti/push
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Pull PUSH service current task definition
      run: |
        aws ecs describe-task-definition --task-definition prod-cti-push --query taskDefinition > push-task-definition.json

    - name: Update PUSH container version in task definition
      id: push-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: push-task-definition.json
        container-name: push
        image: ${{ steps.build-push-image.outputs.image }}

    - name: Deploy PUSH service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.push-task-def.outputs.task-definition }}
        service: prod-cti-push
        cluster: prod-cti
        wait-for-service-stability: true

  deploy-ni:
    name: Deploy to NI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.NI_PROD_KEY }}
        aws-secret-access-key: ${{ secrets.NI_PROD_SECRET }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push PUSH image to Amazon ECR
      id: build-push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ni/push
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Pull PUSH service current task definition
      run: |
        aws ecs describe-task-definition --task-definition prod-ni-push --query taskDefinition > push-task-definition.json

    - name: Update PUSH container version in task definition
      id: push-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: push-task-definition.json
        container-name: push
        image: ${{ steps.build-push-image.outputs.image }}

    - name: Deploy PUSH service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.push-task-def.outputs.task-definition }}
        service: prod-ni-push
        cluster: prod-ni
        wait-for-service-stability: true

  deploy-gi:
    name: Deploy to GI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.13.1'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GI_PROD_KEY }}
          aws-secret-access-key: ${{ secrets.GI_PROD_SECRET }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push PUSH image to Amazon ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gct/push
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Pull PUSH service current task definition
        run: |
          aws ecs describe-task-definition --task-definition prod-gct-push --query taskDefinition > push-task-definition.json

      - name: Update PUSH container version in task definition
        id: push-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: push-task-definition.json
          container-name: push
          image: ${{ steps.build-push-image.outputs.image }}

      - name: Deploy PUSH service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.push-task-def.outputs.task-definition }}
          service: prod-gct-push
          cluster: prod-gct
          wait-for-service-stability: true

  deploy-penn:
    name: Deploy to PA
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PA_PROD_KEY }}
        aws-secret-access-key: ${{ secrets.PA_PROD_SECRET }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push PUSH image to Amazon ECR
      id: build-push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: penn/push
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Pull PUSH service current task definition
      run: |
        aws ecs describe-task-definition --task-definition prod-penn-push --query taskDefinition > push-task-definition.json

    - name: Update PUSH container version in task definition
      id: push-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: push-task-definition.json
        container-name: push
        image: ${{ steps.build-push-image.outputs.image }}

    - name: Deploy PUSH service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.push-task-def.outputs.task-definition }}
        service: prod-penn-push
        cluster: prod-penn
        wait-for-service-stability: true

  deploy-scot:
    name: Deploy to SCOT
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.SCOT_PROD_KEY }}
        aws-secret-access-key: ${{ secrets.SCOT_PROD_SECRET }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push PUSH image to Amazon ECR
      id: build-push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: scot/push
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Pull PUSH service current task definition
      run: |
        aws ecs describe-task-definition --task-definition prod-scot-push --query taskDefinition > push-task-definition.json

    - name: Update PUSH container version in task definition
      id: push-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: push-task-definition.json
        container-name: push
        image: ${{ steps.build-push-image.outputs.image }}

    - name: Deploy PUSH service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.push-task-def.outputs.task-definition }}
        service: prod-scot-push
        cluster: prod-scot
        wait-for-service-stability: true

  deploy-jers:
    name: Deploy to JERS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.1'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.JERS_PROD_KEY }}
        aws-secret-access-key: ${{ secrets.JERS_PROD_SECRET }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push PUSH image to Amazon ECR
      id: build-push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: jers/push
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Pull PUSH service current task definition
      run: |
        aws ecs describe-task-definition --task-definition prod-jers-push --query taskDefinition > push-task-definition.json

    - name: Update PUSH container version in task definition
      id: push-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: push-task-definition.json
        container-name: push
        image: ${{ steps.build-push-image.outputs.image }}

    - name: Deploy PUSH service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.push-task-def.outputs.task-definition }}
        service: prod-jers-push
        cluster: prod-jers
        wait-for-service-stability: true
